{"version":3,"sources":["../src/array-any-x.js"],"names":[],"mappings":"AAAA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,QAAP,MAAqB,aAArB;AACA,OAAO,eAAP,MAA4B,sBAA5B;AACA,OAAO,gBAAP,MAA6B,sBAA7B,C,CAEA;AACA;;AACA;;;;;;;;;;;;AAYA;;AACA,IAAM,GAAG,GAAG,SAAS,GAAT,CAAa,KAAb,EAAoB;AAAS;AAA7B,EAA8C;AACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,KAAD,CAAvB,CADwD,CAExD;;AACA,EAAA,gBAAgB,CAAC,QAAD,CAAhB;AACA,MAAM,QAAQ,GAAG,eAAe,CAAC,MAAD,CAAhC;AACA,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,MAAV,CAAvB;AACA;;AACA,MAAM,OAAO,GAAG,SAAS,CAAC,MAAV,GAAmB,CAAnB,GAAuB,SAAS,CAAC,CAAD,CAAhC,GAAsC,KAAK,CAA3D;AACA,MAAM,MAAM,GAAG,OAAO,OAAP,KAAmB,WAAlC;;AAEA,MAAI,MAAJ,EAAY;AACV,SAAK,IAAI,KAAK,GAAG,CAAjB,EAAoB,KAAK,GAAG,MAA5B,EAAoC,KAAK,IAAI,CAA7C,EAAgD;AAC9C,UAAM,IAAI,GAAG,QAAQ,CAAC,KAAD,CAArB;;AAEA,UAAI,MAAM,GAAG,QAAQ,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAX,GAAmC,QAAQ,CAAC,IAAT,CAAc,OAAd,EAAuB,IAAvB,EAA6B,KAA7B,EAAoC,MAApC,CAA7C,EAA0F;AACxF,eAAO,IAAP;AACD;AACF;AACF;;AAED,SAAO,KAAP;AACD,CArBD;;AAuBA,eAAe,GAAf","file":"array-any-x.esm.js","sourcesContent":["import toObject from 'to-object-x';\nimport toLength from 'to-length-x';\nimport splitIfBoxedBug from 'split-if-boxed-bug-x';\nimport assertIsFunction from 'assert-is-function-x';\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * This method tests whether some element in the array passes the test\n * implemented by the provided function.\n *\n * @param {Array} array - The array to iterate over.\n * @param {Function} callBack - Function to test for each element.\n * @param {*} [thisArg] - Value to use as this when executing callback.\n * @throws {TypeError} If array is null or undefined.\n * @throws {TypeError} If callBack is not a function.\n * @returns {boolean} `true` if the callback function returns a truthy value for\n *  any array element; otherwise, `false`.\n */\n// eslint-enable jsdoc/check-param-names\nconst any = function any(array, callBack /* , thisArg */) {\n  const object = toObject(array);\n  // If no callback function or if callback is not a callable function\n  assertIsFunction(callBack);\n  const iterable = splitIfBoxedBug(object);\n  const length = toLength(iterable.length);\n  /* eslint-disable-next-line prefer-rest-params,no-void */\n  const thisArg = arguments.length > 2 ? arguments[2] : void 0;\n  const noThis = typeof thisArg === 'undefined';\n\n  if (length) {\n    for (let index = 0; index < length; index += 1) {\n      const item = iterable[index];\n\n      if (noThis ? callBack(item, index, object) : callBack.call(thisArg, item, index, object)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\nexport default any;\n"]}